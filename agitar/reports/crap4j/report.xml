<crap_result>
  <project>
    /Users/collin/Documents/workspace/freitonalGUI
  </project>
  <project_id>
    1292404939794
  </project_id>
  <timestamp>
    12/15/10 11:02 AM
  </timestamp>
  <classDirectories>
    <classDirectory>
      /Users/collin/Documents/workspace/freitonalGUI/war/WEB-INF/classes
    </classDirectory>
  </classDirectories>
  <testClassDirectories>
    <testClassDirectory>
      /Users/collin/Documents/workspace/freitonalGUI/war/WEB-INF/classes
    </testClassDirectory>
  </testClassDirectories>
  <sourceDirectories>
    <sourceDirectory>
      /Users/collin/Documents/workspace/freitonalGUI/src
    </sourceDirectory>
    <sourceDirectory>
      /Users/collin/Documents/workspace/freitonalGUI/test
    </sourceDirectory>
  </sourceDirectories>
  <libClasspaths>
    <libClasspath>
      /freitonalGUI
    </libClasspath>
    <libClasspath>
      /Applications/eclipse/plugins/com.google.gwt.eclipse.sdkbundle.2.1.0_2.1.0.v201010280102/gwt-2.1.0/gwt-user.jar
    </libClasspath>
    <libClasspath>
      /Applications/eclipse/plugins/com.google.gwt.eclipse.sdkbundle.2.1.0_2.1.0.v201010280102/gwt-2.1.0/gwt-dev.jar
    </libClasspath>
    <libClasspath>
      /Applications/eclipse/plugins/org.junit_4.8.1.v4_8_1_v20100427-1100/junit.jar
    </libClasspath>
    <libClasspath>
      /Applications/eclipse/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/easymock-2.5.2.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/easymockclassextension-2.5.2.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/cglib-nodep-2.2.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/objenesis-1.2.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/aopalliance.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/gin-1.0.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/guice-2.0.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/commons-fileupload-1.2.1.jar
    </libClasspath>
    <libClasspath>
      /Users/collin/Documents/workspace/freitonalGUI
    </libClasspath>
    <libClasspath>
      /Users/collin/Documents/workspace/freitonalGUI/clojure.jar
    </libClasspath>
    <libClasspath>
      /Users/collin/Documents/workspace/freitonalGUI/clojure-contrib.jar
    </libClasspath>
    <libClasspath>
      /Users/collin/Documents/workspace/freitonalGUI/classes
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/mysql-connector-java-5.1.13-bin.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/gson-1.3.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/clojureql-1.0.0-beta2-20101122.230502-1.jar
    </libClasspath>
    <libClasspath>
      /freitonalGUI/lib/clojureql.jar
    </libClasspath>
  </libClasspaths>
  <stats>
    <name>
      Method Crap Stats
    </name>
    <totalCrap>
      2380.00
    </totalCrap>
    <crap>
      3.18
    </crap>
    <median>
      2.00
    </median>
    <average>
      3.18
    </average>
    <stdDev>
      5.25
    </stdDev>
    <methodCount>
      749
    </methodCount>
    <crapMethodCount>
      8
    </crapMethodCount>
    <crapMethodPercent>
      1.07
    </crapMethodPercent>
    <crapLoad>
      50
    </crapLoad>
    <crapThreshold>
      30
    </crapThreshold>
    <globalAverage>
      -1.00
    </globalAverage>
    <globalCraploadAverage>
      -1.00
    </globalCraploadAverage>
    <globalCrapMethodAverage>
      -1.00
    </globalCrapMethodAverage>
    <globalTotalMethodAverage>
      -1.00
    </globalTotalMethodAverage>
    <globalAverageDiff>
      4.18
    </globalAverageDiff>
    <globalCraploadAverageDiff>
      51.00
    </globalCraploadAverageDiff>
    <globalCrapMethodAverageDiff>
      9.00
    </globalCrapMethodAverageDiff>
    <globalTotalMethodAverageDiff>
      750.00
    </globalTotalMethodAverageDiff>
    <shareStatsUrl>
      http://www.crap4j.org/benchmark/stats/new?stat[project_hash]=1292404939794&amp;stat[project_url]=freitonalGUI&amp;stat[crap]=1.07&amp;stat[crap_load]=50&amp;stat[crap_methods]=8&amp;stat[total_methods]=749&amp;stat[ones]=0&amp;stat[twos]=650&amp;stat[fours]=68&amp;stat[eights]=20&amp;stat[sixteens]=6&amp;stat[thirtytwos]=4&amp;stat[sixtyfours]=1&amp;stat[one28s]=0&amp;stat[two56s]=0
    </shareStatsUrl>
    <histogram>
      <hist>
        <place>
          one
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          two
        </place>
        <value>
          650
        </value>
        <height>
          170.00px
        </height>
      </hist>
      <hist>
        <place>
          four
        </place>
        <value>
          68
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          eight
        </place>
        <value>
          20
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          sixteen
        </place>
        <value>
          6
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          thirtytwo
        </place>
        <value>
          4
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          sixtyfour
        </place>
        <value>
          1
        </value>
        <height>
          28.00px
        </height>
      </hist>
      <hist>
        <place>
          one28
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
      <hist>
        <place>
          two56
        </place>
        <value>
          0
        </value>
        <height>
          0.00px
        </height>
      </hist>
    </histogram>
  </stats>
  <methods>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/AppController;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.AppController)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/GwtEvent&lt;*&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(com.google.gwt.event.shared.GwtEvent&lt;?&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/AppController;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.AppController)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$2
      </className>
      <methodName>
        onFailure
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public  void onFailure(java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$2
      </className>
      <methodName>
        onSuccess
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/SearchResult;)V
      </methodSignature>
      <fullMethod>
        public  void onSuccess(de.cr.freitonal.client.rpc.SearchResult)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$2
      </className>
      <methodName>
        onSuccess
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onSuccess(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/AppController;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.AppController)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$3
      </className>
      <methodName>
        onFailure
      </methodName>
      <methodSignature>
        (Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public  void onFailure(java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$3
      </className>
      <methodName>
        onSuccess
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/SearchResult;)V
      </methodSignature>
      <fullMethod>
        public  void onSuccess(de.cr.freitonal.client.rpc.SearchResult)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController$3
      </className>
      <methodName>
        onSuccess
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onSuccess(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter$View;Lde/cr/freitonal/client/rpc/RPCService;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.widgets.piece.PiecePresenter$View, de.cr.freitonal.client.rpc.RPCService)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/AppController;Lde/cr/freitonal/client/event/SearchFieldChangedEvent;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(de.cr.freitonal.client.AppController, de.cr.freitonal.client.event.SearchFieldChangedEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/AppController;Lde/cr/freitonal/client/rpc/PieceSearchMask;)V
      </methodSignature>
      <fullMethod>
        static  void access$1(de.cr.freitonal.client.AppController, de.cr.freitonal.client.rpc.PieceSearchMask)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        access$2
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/AppController;)Lde/cr/freitonal/client/rpc/PieceSearchMask;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.rpc.PieceSearchMask access$2(de.cr.freitonal.client.AppController)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        createDFA
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void createDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        getDFA
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/OldDFA;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.OldDFA getDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        getPiecePresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/piece/PiecePresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.piece.PiecePresenter getPiecePresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        go
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void go()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        loadInitialData
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void loadInitialData()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/SearchFieldChangedEvent;)V
      </methodSignature>
      <fullMethod>
        private  void search(de.cr.freitonal.client.event.SearchFieldChangedEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        AppController
      </className>
      <methodName>
        setRPCService
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/RPCService;)V
      </methodSignature>
      <fullMethod>
        public  void setRPCService(de.cr.freitonal.client.rpc.RPCService)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        FreitonalGUI
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        FreitonalGUI
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client
      </package>
      <className>
        FreitonalGUI
      </className>
      <methodName>
        onModuleLoad
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onModuleLoad()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        DisplayMode
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        DisplayMode
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;I)V
      </methodSignature>
      <fullMethod>
        private  void &lt;init&gt;(java.lang.String, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        DisplayMode
      </className>
      <methodName>
        valueOf
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/event/DisplayMode;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.event.DisplayMode valueOf(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        DisplayMode
      </className>
      <methodName>
        values
      </methodName>
      <methodSignature>
        ()[Lde/cr/freitonal/client/event/DisplayMode;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.event.DisplayMode[] values()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/OldDFA;Lcom/google/gwt/event/shared/GwtEvent$Type;Lde/cr/freitonal/client/event/TransitionHandler;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.event.OldDFA, com.google.gwt.event.shared.GwtEvent$Type, de.cr.freitonal.client.event.TransitionHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA$1
      </className>
      <methodName>
        onSearchFieldChanged
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/SearchFieldChangedEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onSearchFieldChanged(de.cr.freitonal.client.event.SearchFieldChangedEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/State;Lcom/google/gwt/event/shared/EventBus;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.event.State, com.google.gwt.event.shared.EventBus)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/OldDFA;Lcom/google/gwt/event/shared/GwtEvent$Type;Lde/cr/freitonal/client/event/TransitionHandler;Lcom/google/gwt/event/shared/GwtEvent;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(de.cr.freitonal.client.event.OldDFA, com.google.gwt.event.shared.GwtEvent$Type, de.cr.freitonal.client.event.TransitionHandler, com.google.gwt.event.shared.GwtEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/GwtEvent$Type&lt;Lde/cr/freitonal/client/event/SearchFieldChangedHandler;&gt;;Lde/cr/freitonal/client/event/State;Lde/cr/freitonal/client/event/State;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(com.google.gwt.event.shared.GwtEvent$Type&lt;de.cr.freitonal.client.event.SearchFieldChangedHandler&gt;, de.cr.freitonal.client.event.State, de.cr.freitonal.client.event.State)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        getCurrentState
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/State;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.State getCurrentState()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        reset
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void reset()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        PiecePlusInstrumentationTypeSelectedEvent
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        PiecePlusInstrumentationTypeSelectedEvent
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        PiecePlusInstrumentationTypeSelectedEvent
      </className>
      <methodName>
        dispatch
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventHandler;)V
      </methodSignature>
      <fullMethod>
        protected  void dispatch(com.google.gwt.event.shared.EventHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        PiecePlusInstrumentationTypeSelectedEvent
      </className>
      <methodName>
        dispatch
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/PiecePlusInstrumentationTypeSelectedHandler;)V
      </methodSignature>
      <fullMethod>
        protected  void dispatch(de.cr.freitonal.client.event.PiecePlusInstrumentationTypeSelectedHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        PiecePlusInstrumentationTypeSelectedEvent
      </className>
      <methodName>
        getAssociatedType
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/shared/GwtEvent$Type&lt;Lde/cr/freitonal/client/event/PiecePlusInstrumentationTypeSelectedHandler;&gt;;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.GwtEvent$Type&lt;de.cr.freitonal.client.event.PiecePlusInstrumentationTypeSelectedHandler&gt; getAssociatedType()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        SearchFieldChangedEvent
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        SearchFieldChangedEvent
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        SearchFieldChangedEvent
      </className>
      <methodName>
        dispatch
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventHandler;)V
      </methodSignature>
      <fullMethod>
        protected  void dispatch(com.google.gwt.event.shared.EventHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        SearchFieldChangedEvent
      </className>
      <methodName>
        dispatch
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/SearchFieldChangedHandler;)V
      </methodSignature>
      <fullMethod>
        protected  void dispatch(de.cr.freitonal.client.event.SearchFieldChangedHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        SearchFieldChangedEvent
      </className>
      <methodName>
        getAssociatedType
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/shared/GwtEvent$Type&lt;Lde/cr/freitonal/client/event/SearchFieldChangedHandler;&gt;;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.GwtEvent$Type&lt;de.cr.freitonal.client.event.SearchFieldChangedHandler&gt; getAssociatedType()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        State
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        State
      </className>
      <methodName>
        getName
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getName()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        State
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        AbstractTransitionAction
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        AbstractTransitionAction
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        AbstractTransitionAction
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String, java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String, java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.TransitionAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransitionWithTriggerParam
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addTransitionWithTriggerParam(java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransitionWithTriggerParam
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void addTransitionWithTriggerParam(java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String, de.cr.freitonal.client.event.dfa.TransitionAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        getState
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getState()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        setDebug
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setDebug(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        transition
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/dfa/Trigger;)V
      </methodSignature>
      <fullMethod>
        public  void transition(de.cr.freitonal.client.event.dfa.Trigger)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        transition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void transition(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        transition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;[Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void transition(java.lang.String, java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String, de.cr.freitonal.client.event.dfa.TransitionAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String, java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String, java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.TransitionAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        containsState
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public  boolean containsState(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        EqualsTriggerParam
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Transition
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String, de.cr.freitonal.client.event.dfa.TransitionAction)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Transition
      </className>
      <methodName>
        compareTo
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)I
      </methodSignature>
      <fullMethod>
        public  int compareTo(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Transition
      </className>
      <methodName>
        getAction
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/dfa/TransitionAction;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.dfa.TransitionAction getAction()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Transition
      </className>
      <methodName>
        getTargetState
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getTargetState()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Transition
      </className>
      <methodName>
        getTriggerParam
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/dfa/TriggerParam;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.dfa.TriggerParam getTriggerParam()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;[Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        getTriggerParam
      </methodName>
      <methodSignature>
        ()[Ljava/lang/Object;
      </methodSignature>
      <fullMethod>
        public  [] getTriggerParam()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        getTriggerString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getTriggerString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        CatalogSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.models.ItemSet, de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        CatalogSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;, java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        CatalogSet
      </className>
      <methodName>
        copyItemSelectionTo
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/CatalogSet;)V
      </methodSignature>
      <fullMethod>
        public  void copyItemSelectionTo(de.cr.freitonal.client.models.CatalogSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        CatalogSet
      </className>
      <methodName>
        getNames
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getNames()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        CatalogSet
      </className>
      <methodName>
        getNumbers
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getNumbers()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ComposerSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ComposerSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        InstrumentationSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Instrumentation;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Instrumentation&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        InstrumentationSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Instrumentation;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Instrumentation[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        InstrumentationSet
      </className>
      <methodName>
        getInstrumentations
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Instrumentation;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Instrumentation&gt; getInstrumentations()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        InstrumentationSet
      </className>
      <methodName>
        getSearchPattern
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/VolatileInstrumentation;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.VolatileInstrumentation getSearchPattern()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        InstrumentationSet
      </className>
      <methodName>
        setSearchPattern
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/VolatileInstrumentation;)V
      </methodSignature>
      <fullMethod>
        public  void setSearchPattern(de.cr.freitonal.shared.models.VolatileInstrumentation)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        InstrumentationSet
      </className>
      <methodName>
        size
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int size()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/HashSet&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.HashSet&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        contains
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)Z
      </methodSignature>
      <fullMethod>
        public  boolean contains(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        copyItemSelectionTo
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        public  void copyItemSelectionTo(de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        getItem
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getItem(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        getItems
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; getItems()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        getSelected
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelected()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        removeSelection
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void removeSelection()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        size
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int size()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        getSelected
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelected()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        getSelectedList
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; getSelectedList()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        setSelected
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setSelected(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        setSelectedList
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void setSelectedList(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        MusicKeySet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        MusicKeySet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        OrdinalSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        OrdinalSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PieceTypeSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;, java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PieceTypeSet
      </className>
      <methodName>
        copyItemSelectionTo
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/PieceTypeSet;)V
      </methodSignature>
      <fullMethod>
        public  void copyItemSelectionTo(de.cr.freitonal.client.models.PieceTypeSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PieceTypeSet
      </className>
      <methodName>
        getAllTypesItemSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getAllTypesItemSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PieceTypeSet
      </className>
      <methodName>
        getPiecePlusInstrumentationTypes
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getPiecePlusInstrumentationTypes()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PieceTypeSet
      </className>
      <methodName>
        getPieceTypes
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getPieceTypes()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PieceTypeSet
      </className>
      <methodName>
        size
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int size()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PublicationDateSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        PublicationDateSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        SubtitleSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        SubtitleSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        AbstractFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        CatalogSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        CatalogSetFactory
      </className>
      <methodName>
        createCatalogSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/CatalogSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.CatalogSet createCatalogSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        ComposerSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        InstrumentationSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        InstrumentationSetFactory
      </className>
      <methodName>
        createInstrumentation
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/shared/models/Instrumentation;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.shared.models.Instrumentation createInstrumentation(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        MusicKeySetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        MusicKeySetFactory
      </className>
      <methodName>
        createMusicKeySet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/MusicKeySet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.MusicKeySet createMusicKeySet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        OrdinalSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        OrdinalSetFactory
      </className>
      <methodName>
        createOrdinalSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/OrdinalSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.OrdinalSet createOrdinalSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        PieceTypeSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        PieceTypeSetFactory
      </className>
      <methodName>
        createPieceTypeSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/PieceTypeSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.PieceTypeSet createPieceTypeSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        PublicationDateSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        PublicationDateSetFactory
      </className>
      <methodName>
        createPublicationDateSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/PublicationDateSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.PublicationDateSet createPublicationDateSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        SubtitleSetFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        SubtitleSetFactory
      </className>
      <methodName>
        createSubtitleSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/SubtitleSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.SubtitleSet createSubtitleSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;Lde/cr/freitonal/client/rpc/URLEncoder;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.rpc.PieceSearchMask, de.cr.freitonal.client.rpc.URLEncoder)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        addHTTPParameter
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void addHTTPParameter(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        catalogToHTTPParameter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void catalogToHTTPParameter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        composerToHTTPParameter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void composerToHTTPParameter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        getHTTPParameters
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getHTTPParameters()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        musicKeyToHTTPParameter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void musicKeyToHTTPParameter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        ordinalToHTTPParameter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void ordinalToHTTPParameter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        subtitleToHTTPParameter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void subtitleToHTTPParameter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOParser;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.rpc.dto.DTOParser)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createCatalogSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/CatalogSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.CatalogSet createCatalogSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createComposerSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/ComposerSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.ComposerSet createComposerSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createInstrumentationSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.InstrumentationSet createInstrumentationSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createMusicKeySet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/MusicKeySet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.MusicKeySet createMusicKeySet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createOrdinalSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/OrdinalSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.OrdinalSet createOrdinalSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createPieceSearchMask
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/rpc/PieceSearchMask;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.rpc.PieceSearchMask createPieceSearchMask(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createPieceTypeSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/PieceTypeSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.PieceTypeSet createPieceTypeSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createPublicationDateSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/PublicationDateSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.PublicationDateSet createPublicationDateSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createSearchResult
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/SearchResult;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.SearchResult createSearchResult(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        ModelFactory
      </className>
      <methodName>
        createSubtitleSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/SubtitleSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.SubtitleSet createSubtitleSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        copyItemSelectionTo
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;)V
      </methodSignature>
      <fullMethod>
        public  void copyItemSelectionTo(de.cr.freitonal.client.rpc.PieceSearchMask)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getCatalogs
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/CatalogSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.CatalogSet getCatalogs()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getComposers
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ComposerSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ComposerSet getComposers()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getInstrumentations
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.InstrumentationSet getInstrumentations()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getMusicKeys
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/MusicKeySet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.MusicKeySet getMusicKeys()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getOrdinals
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/OrdinalSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.OrdinalSet getOrdinals()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getPieceTypes
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/PieceTypeSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.PieceTypeSet getPieceTypes()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getPublicationDates
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getPublicationDates()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        getSubtitles
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/SubtitleSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.SubtitleSet getSubtitles()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setCatalogs
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/CatalogSet;)V
      </methodSignature>
      <fullMethod>
        public  void setCatalogs(de.cr.freitonal.client.models.CatalogSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setComposers
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ComposerSet;)V
      </methodSignature>
      <fullMethod>
        public  void setComposers(de.cr.freitonal.client.models.ComposerSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setInstrumentations
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        public  void setInstrumentations(de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setMusicKeys
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/MusicKeySet;)V
      </methodSignature>
      <fullMethod>
        public  void setMusicKeys(de.cr.freitonal.client.models.MusicKeySet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setOrdinals
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/OrdinalSet;)V
      </methodSignature>
      <fullMethod>
        public  void setOrdinals(de.cr.freitonal.client.models.OrdinalSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setPieceTypes
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/PieceTypeSet;)V
      </methodSignature>
      <fullMethod>
        public  void setPieceTypes(de.cr.freitonal.client.models.PieceTypeSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setPublicationDates
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/PublicationDateSet;)V
      </methodSignature>
      <fullMethod>
        public  void setPublicationDates(de.cr.freitonal.client.models.PublicationDateSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        PieceSearchMask
      </className>
      <methodName>
        setSubtitles
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/SubtitleSet;)V
      </methodSignature>
      <fullMethod>
        public  void setSubtitles(de.cr.freitonal.client.models.SubtitleSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/RPCServiceImpl;Lcom/google/gwt/user/client/rpc/AsyncCallback;Lde/cr/freitonal/client/rpc/PieceSearchMask;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.rpc.RPCServiceImpl, com.google.gwt.user.client.rpc.AsyncCallback, de.cr.freitonal.client.rpc.PieceSearchMask)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl$1
      </className>
      <methodName>
        onError
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/http/client/Request;Ljava/lang/Throwable;)V
      </methodSignature>
      <fullMethod>
        public  void onError(com.google.gwt.http.client.Request, java.lang.Throwable)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl$1
      </className>
      <methodName>
        onResponseReceived
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/http/client/Request;Lcom/google/gwt/http/client/Response;)V
      </methodSignature>
      <fullMethod>
        public  void onResponseReceived(com.google.gwt.http.client.Request, com.google.gwt.http.client.Response)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOParser;Lde/cr/freitonal/client/rpc/URLEncoder;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.rpc.dto.DTOParser, de.cr.freitonal.client.rpc.URLEncoder)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        save
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/VolatilePiece;)V
      </methodSignature>
      <fullMethod>
        public  void save(de.cr.freitonal.shared.models.VolatilePiece)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/user/client/rpc/AsyncCallback&lt;Lde/cr/freitonal/client/rpc/SearchResult;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void search(com.google.gwt.user.client.rpc.AsyncCallback&lt;de.cr.freitonal.client.rpc.SearchResult&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        setModelFactory
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/ModelFactory;)V
      </methodSignature>
      <fullMethod>
        public  void setModelFactory(de.cr.freitonal.client.rpc.ModelFactory)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        setRequestBuilderFactory
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/RequestBuilderFactory;)V
      </methodSignature>
      <fullMethod>
        public  void setRequestBuilderFactory(de.cr.freitonal.client.rpc.RequestBuilderFactory)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RequestBuilderFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RequestBuilderFactory
      </className>
      <methodName>
        createRequestBuilder
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/http/client/RequestBuilder$Method;Ljava/lang/String;)Lcom/google/gwt/http/client/RequestBuilder;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.http.client.RequestBuilder createRequestBuilder(com.google.gwt.http.client.RequestBuilder$Method, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        SearchResult
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        SearchResult
      </className>
      <methodName>
        getPieceSearchMask
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/PieceSearchMask;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.PieceSearchMask getPieceSearchMask()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        SearchResult
      </className>
      <methodName>
        setPieceSearchMask
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;)V
      </methodSignature>
      <fullMethod>
        public  void setPieceSearchMask(de.cr.freitonal.client.rpc.PieceSearchMask)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        URLEncoderImpl
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        URLEncoderImpl
      </className>
      <methodName>
        encode
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String encode(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        URLEncoderImpl
      </className>
      <methodName>
        encodeParam
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String encodeParam(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.factories
      </package>
      <className>
        CatalogHTTPParameterFactory
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/URLEncoder;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.rpc.URLEncoder)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.factories
      </package>
      <className>
        CatalogHTTPParameterFactory
      </className>
      <methodName>
        addHTTPParameter
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        private  java.lang.String addHTTPParameter(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOArrayGWT
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/json/client/JSONArray;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.json.client.JSONArray)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOArrayGWT
      </className>
      <methodName>
        get
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/rpc/dto/DTOValue;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOValue get(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOArrayGWT
      </className>
      <methodName>
        size
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int size()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTONumberGWT
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/json/client/JSONNumber;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(com.google.gwt.json.client.JSONNumber)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTONumberGWT
      </className>
      <methodName>
        doubleValue
      </methodName>
      <methodSignature>
        ()D
      </methodSignature>
      <fullMethod>
        public  double doubleValue()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOObjectGWT
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/json/client/JSONObject;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.json.client.JSONObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOObjectGWT
      </className>
      <methodName>
        get
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/dto/DTOValue;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOValue get(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOParserGWT
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOParserGWT
      </className>
      <methodName>
        parse
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/dto/DTOValue;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOValue parse(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOStringGWT
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/json/client/JSONString;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.json.client.JSONString)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOStringGWT
      </className>
      <methodName>
        stringValue
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String stringValue()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOValueGWT
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/json/client/JSONValue;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.json.client.JSONValue)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOValueGWT
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOArrayJava
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gson/JsonArray;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gson.JsonArray)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOArrayJava
      </className>
      <methodName>
        get
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/rpc/dto/DTOValue;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOValue get(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOArrayJava
      </className>
      <methodName>
        size
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int size()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTONumberJava
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gson/JsonPrimitive;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gson.JsonPrimitive)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTONumberJava
      </className>
      <methodName>
        doubleValue
      </methodName>
      <methodSignature>
        ()D
      </methodSignature>
      <fullMethod>
        public  double doubleValue()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOObjectJava
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gson/JsonObject;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gson.JsonObject)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOObjectString
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gson/JsonPrimitive;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gson.JsonPrimitive)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOObjectString
      </className>
      <methodName>
        stringValue
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String stringValue()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOParserJava
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOParserJava
      </className>
      <methodName>
        parse
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/dto/DTOValue;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOValue parse(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        BasePresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        BasePresenter
      </className>
      <methodName>
        getEventBus
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/shared/EventBus;
      </methodSignature>
      <fullMethod>
        protected  com.google.gwt.event.shared.EventBus getEventBus()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;)V
      </methodSignature>
      <fullMethod>
        protected  void &lt;init&gt;(com.google.gwt.event.shared.EventBus)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        addPresenter
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/SelectablePresenter;)V
      </methodSignature>
      <fullMethod>
        protected  void addPresenter(de.cr.freitonal.client.widgets.base.SelectablePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        getListBoxPresenters
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/client/widgets/base/SelectablePresenter;&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.util.ArrayList&lt;de.cr.freitonal.client.widgets.base.SelectablePresenter&gt; getListBoxPresenters()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        getNumberOfPresenters
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        protected  int getNumberOfPresenters()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        getPresenter
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/widgets/base/SelectablePresenter;
      </methodSignature>
      <fullMethod>
        protected  de.cr.freitonal.client.widgets.base.SelectablePresenter getPresenter(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        removePresenter
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        protected  void removePresenter(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        MultiSourceSearchFieldPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.listbox.IListBoxView)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        MultiSourceSearchFieldPresenter
      </className>
      <methodName>
        getSelectedSource
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getSelectedSource()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        SearchFieldPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.listbox.IListBoxView)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        SearchFieldPresenter
      </className>
      <methodName>
        initializeDFA
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initializeDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        EditableListBoxView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        EditableListBoxView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        EditableListBoxView
      </className>
      <methodName>
        switchToCreateMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void switchToCreateMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        EditableListBoxView
      </className>
      <methodName>
        switchToSelectMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void switchToSelectMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$1
      </className>
      <methodName>
        onChange
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onChange(com.google.gwt.event.dom.client.ChangeEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$10
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$10
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$11
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$11
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$12
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$12
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$13
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$13
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$2
      </className>
      <methodName>
        onClick
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ClickEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onClick(com.google.gwt.event.dom.client.ClickEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$3
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$4
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$5
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$5
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$6
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$6
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$7
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$7
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$8
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$8
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$9
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$9
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.listbox.IListBoxView)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.widgets.base.listbox.IListBoxView access$1(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        access$2
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
        static  void access$2(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        access$3
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        static  void access$3(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter, de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        access$4
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        static  void access$4(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter, de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        access$5
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.models.ItemSet access$5(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        addChangeHandler
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeHandler;)V
      </methodSignature>
      <fullMethod>
        public  void addChangeHandler(com.google.gwt.event.dom.client.ChangeHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        bind
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void bind()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        fireHandleClickEventOnCloseImage_TEST
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void fireHandleClickEventOnCloseImage_TEST()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        fireHandleClickEventOnExitViewMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void fireHandleClickEventOnExitViewMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        fireOnNewItemSelected
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void fireOnNewItemSelected(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getCurrentItemSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getCurrentItemSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getFullItemSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getFullItemSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getItem
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getItem(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelectedItem()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.View getView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        handleItemSetChange
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        private  void handleItemSetChange(de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        initializeDFA
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void initializeDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        isEnabled
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isEnabled()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        isVisible
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isVisible()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        setItemSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        public  void setItemSet(de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        setView
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;)V
      </methodSignature>
      <fullMethod>
        public  void setView(de.cr.freitonal.client.widgets.base.listbox.IListBoxView)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        protected  void &lt;init&gt;(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        addChangeHandler
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeHandler;)Lcom/google/gwt/event/shared/HandlerRegistration;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.HandlerRegistration addChangeHandler(com.google.gwt.event.dom.client.ChangeHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        addClickHandler
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ClickHandler;)Lcom/google/gwt/event/shared/HandlerRegistration;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.HandlerRegistration addClickHandler(com.google.gwt.event.dom.client.ClickHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/user/client/ui/HTMLPanel;)V
      </methodSignature>
      <fullMethod>
        protected  void init(com.google.gwt.user.client.ui.HTMLPanel)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        isEnabled
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isEnabled()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        setItems
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void setItems(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        setName
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setName(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        switchToCreateMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void switchToCreateMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        switchToSelectMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void switchToSelectMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        switchToViewMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void switchToViewMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        EditableScalarView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        EditableScalarView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        EditableScalarView
      </className>
      <methodName>
        getLabel
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/user/client/ui/HasText;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.user.client.ui.HasText getLabel()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        EditableScalarView
      </className>
      <methodName>
        getListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        fireOnNewItemSelected
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void fireOnNewItemSelected(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        getDisplayMode
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/DisplayMode;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.DisplayMode getDisplayMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        getItem
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getItem(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        getItemCount
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getItemCount()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        getListBoxPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter getListBoxPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelectedItem()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        setItems
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        public  void setItems(de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        setListBoxPresenter
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;)V
      </methodSignature>
      <fullMethod>
        public  void setListBoxPresenter(de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarPresenter
      </className>
      <methodName>
        setView
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void setView(de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarView
      </className>
      <methodName>
        getLabel
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/user/client/ui/HasText;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.user.client.ui.HasText getLabel()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.scalar
      </package>
      <className>
        ScalarView
      </className>
      <methodName>
        getListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.catalog.CatalogPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter$1
      </className>
      <methodName>
        onChange
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onChange(com.google.gwt.event.dom.client.ChangeEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.catalog.CatalogPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter$2
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.catalog.CatalogPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter$3
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.catalog.CatalogPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter;)Lde/cr/freitonal/client/event/dfa/DFA;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.event.dfa.DFA access$0(de.cr.freitonal.client.widgets.catalog.CatalogPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter;)Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter access$1(de.cr.freitonal.client.widgets.catalog.CatalogPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        bind
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void bind()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        fireOnNewItemSelected
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Catalog;)V
      </methodSignature>
      <fullMethod>
        public  void fireOnNewItemSelected(de.cr.freitonal.shared.models.Catalog)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        getNameItemCount
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getNameItemCount()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        getNameListBoxPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter getNameListBoxPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        getNumberItemCount
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getNumberItemCount()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        getNumberListBoxPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter getNumberListBoxPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Catalog;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Catalog getSelectedItem()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        initializeDFA
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void initializeDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogView
      </className>
      <methodName>
        getNameListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getNameListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogView
      </className>
      <methodName>
        getNumberListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getNumberListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.composer
      </package>
      <className>
        ComposerPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/composer/ComposerPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.composer.ComposerPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.composer
      </package>
      <className>
        ComposerView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$10
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$10
      </className>
      <methodName>
        onClick
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ClickEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onClick(com.google.gwt.event.dom.client.ClickEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$11
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$11
      </className>
      <methodName>
        onPiecePlusInstrumentationTypeSelected
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onPiecePlusInstrumentationTypeSelected()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$12
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$12
      </className>
      <methodName>
        onChange
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onChange(com.google.gwt.event.dom.client.ChangeEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$3
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$4
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$4
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$5
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$5
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$6
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$6
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$7
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$7
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$8
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$9
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$9
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        static  void access$0(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter, de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;I)Lde/cr/freitonal/client/widgets/base/SelectablePresenter;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.widgets.base.SelectablePresenter access$1(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter, int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$10
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
        static  void access$10(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$11
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)Lde/cr/freitonal/client/event/dfa/DFA;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.event.dfa.DFA access$11(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$2
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;Lde/cr/freitonal/client/widgets/base/SelectablePresenter;Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        static  void access$2(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter, de.cr.freitonal.client.widgets.base.SelectablePresenter, de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$3
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        static  void access$3(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter, de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$4
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
        static  void access$4(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$5
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
        static  void access$5(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$6
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter access$6(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$7
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)V
      </methodSignature>
      <fullMethod>
        static  void access$7(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$8
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        static  void access$8(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter, de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        access$9
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;)Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.models.InstrumentationSet access$9(de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        addInstrumentPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter addInstrumentPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        bind
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void bind()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        fireAddInstrumentButtonClicked
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void fireAddInstrumentButtonClicked()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        fireAddInstrumentButtonClicked_TEST
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void fireAddInstrumentButtonClicked_TEST()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        getDFA
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/dfa/DFA;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.dfa.DFA getDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        getInstrumentPresenter
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/widgets/base/listbox/ListBoxPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.ListBoxPresenter getInstrumentPresenter(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        getNumberOfInstrumentPresenters
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getNumberOfInstrumentPresenters()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/VolatileInstrumentation;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.VolatileInstrumentation getSelectedItem()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        hideAddInstrumentButton
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void hideAddInstrumentButton()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        initializeDFA
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void initializeDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        isEnabled
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isEnabled()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void search()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        setDisplayItemOnFirstPresenter
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        private  void setDisplayItemOnFirstPresenter(de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        setInstrumentations
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        public  void setInstrumentations(de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        updateItemSetOfInstrument
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/base/SelectablePresenter;Lde/cr/freitonal/client/models/InstrumentationSet;)V
      </methodSignature>
      <fullMethod>
        private  void updateItemSetOfInstrument(de.cr.freitonal.client.widgets.base.SelectablePresenter, de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationView
      </className>
      <methodName>
        addInstrumentList
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView addInstrumentList()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationView
      </className>
      <methodName>
        getAddInstrumentButton
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/dom/client/HasClickHandlers;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.dom.client.HasClickHandlers getAddInstrumentButton()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationView
      </className>
      <methodName>
        getInstrumentView
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getInstrumentView(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationView
      </className>
      <methodName>
        setAddInstrumentButtonVisible
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setAddInstrumentButtonVisible(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.musickey
      </package>
      <className>
        MusicKeyPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.musickey
      </package>
      <className>
        MusicKeyView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.ordinal
      </package>
      <className>
        OrdinalPresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.ordinal
      </package>
      <className>
        OrdinalView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.piece.PiecePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.piece.PiecePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter$2
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter$3
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.piece.PiecePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter$3
      </className>
      <methodName>
        onClick
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ClickEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onClick(com.google.gwt.event.dom.client.ClickEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter$View;Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/rpc/RPCService;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.widgets.piece.PiecePresenter$View, com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.rpc.RPCService)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter;)Lde/cr/freitonal/client/widgets/piece/PiecePresenter$View;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.widgets.piece.PiecePresenter$View access$0(de.cr.freitonal.client.widgets.piece.PiecePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter;)Ljava/util/ArrayList;
      </methodSignature>
      <fullMethod>
        static  java.util.ArrayList access$1(de.cr.freitonal.client.widgets.piece.PiecePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        access$2
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piece/PiecePresenter;)V
      </methodSignature>
      <fullMethod>
        static  void access$2(de.cr.freitonal.client.widgets.piece.PiecePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        bind
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void bind()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        fireAddPieceButtonClicked
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void fireAddPieceButtonClicked()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getCatalogPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.catalog.CatalogPresenter getCatalogPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getComposerPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/composer/ComposerPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.composer.ComposerPresenter getComposerPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getInstrumentationPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter getInstrumentationPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getMusicKeyPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/musickey/MusicKeyPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.musickey.MusicKeyPresenter getMusicKeyPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getOrdinalPresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/ordinal/OrdinalPresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.ordinal.OrdinalPresenter getOrdinalPresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getPieceTypePresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/piecetype/PieceTypePresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.piecetype.PieceTypePresenter getPieceTypePresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        getSubtitlePresenter
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/subtitle/SubtitlePresenter;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.subtitle.SubtitlePresenter getSubtitlePresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        initializeDFA
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void initializeDFA()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        save
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void save()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        setRPCService
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/RPCService;)V
      </methodSignature>
      <fullMethod>
        public  void setRPCService(de.cr.freitonal.client.rpc.RPCService)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter
      </className>
      <methodName>
        setSearchData
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;)V
      </methodSignature>
      <fullMethod>
        public  void setSearchData(de.cr.freitonal.client.rpc.PieceSearchMask)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getAddPieceButton
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/dom/client/HasClickHandlers;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.dom.client.HasClickHandlers getAddPieceButton()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getCatalogView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.catalog.CatalogPresenter$View getCatalogView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getComposerView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/composer/ComposerPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.composer.ComposerPresenter$View getComposerView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getInstrumentationView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter$View getInstrumentationView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getMusicKeyView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getMusicKeyView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getOrdinalView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getOrdinalView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getPieceTypeView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getPieceTypeView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getPublicationDateView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getPublicationDateView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        getSubtitleView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getSubtitleView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PieceView
      </className>
      <methodName>
        setAddPieceButtonText
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setAddPieceButtonText(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piecetype/PieceTypePresenter;Lde/cr/freitonal/client/widgets/base/MultiSourceSearchFieldPresenter;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.client.widgets.piecetype.PieceTypePresenter, de.cr.freitonal.client.widgets.base.MultiSourceSearchFieldPresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter
      </className>
      <methodName>
        access$0
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piecetype/PieceTypePresenter;)Lde/cr/freitonal/client/models/PieceTypeSet;
      </methodSignature>
      <fullMethod>
        static  de.cr.freitonal.client.models.PieceTypeSet access$0(de.cr.freitonal.client.widgets.piecetype.PieceTypePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter
      </className>
      <methodName>
        access$1
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/widgets/piecetype/PieceTypePresenter;)Lcom/google/gwt/event/shared/EventBus;
      </methodSignature>
      <fullMethod>
        static  com.google.gwt.event.shared.EventBus access$1(de.cr.freitonal.client.widgets.piecetype.PieceTypePresenter)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter
      </className>
      <methodName>
        bind
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void bind()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter
      </className>
      <methodName>
        setPieceTypes
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/PieceTypeSet;)V
      </methodSignature>
      <fullMethod>
        public  void setPieceTypes(de.cr.freitonal.client.models.PieceTypeSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypeView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.pubdate
      </package>
      <className>
        PublicationDatePresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.pubdate
      </package>
      <className>
        PublicationDateView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.subtitle
      </package>
      <className>
        SubtitlePresenter
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/EventBus;Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gwt.event.shared.EventBus, de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.subtitle
      </package>
      <className>
        SubtitleView
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.server.servlet
      </package>
      <className>
        SearchServlet
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.server.servlet
      </package>
      <className>
        SearchServlet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.server.servlet
      </package>
      <className>
        SearchServlet
      </className>
      <methodName>
        doGet
      </methodName>
      <methodSignature>
        (Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      </methodSignature>
      <fullMethod>
        public  void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.server.servlet
      </package>
      <className>
        SearchServlet
      </className>
      <methodName>
        init
      </methodName>
      <methodSignature>
        (Ljavax/servlet/ServletConfig;)V
      </methodSignature>
      <fullMethod>
        public  void init(javax.servlet.ServletConfig)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.server.servlet
      </package>
      <className>
        SearchServlet
      </className>
      <methodName>
        main
      </methodName>
      <methodSignature>
        ([Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public static  void main(java.lang.String[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Catalog
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item, de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Catalog
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/shared/models/Item;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.Item, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Catalog
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Catalog
      </className>
      <methodName>
        getCatalogNumber
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getCatalogNumber()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Catalog
      </className>
      <methodName>
        getID
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getID()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Catalog
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/shared/models/VolatileInstrumentation;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.VolatileInstrumentation)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.String, java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;[Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.String, de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        getID
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getID()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Item
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/shared/models/VolatileItem;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.VolatileItem)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Item
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Item
      </className>
      <methodName>
        getID
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getID()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Item
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Item
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Piece
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/shared/models/VolatilePiece;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.VolatilePiece)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Piece
      </className>
      <methodName>
        getID
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getID()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Piece
      </className>
      <methodName>
        hashCode
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int hashCode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        PiecePlusInstrumentationType
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/shared/models/VolatilePiecePlusInstrumentationType;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.VolatilePiecePlusInstrumentationType)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        PiecePlusInstrumentationType
      </className>
      <methodName>
        getID
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getID()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileCatalog
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileCatalog
      </className>
      <methodName>
        getCatalogName
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getCatalogName()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileCatalog
      </className>
      <methodName>
        getOrdinal
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getOrdinal()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileInstrumentation
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileInstrumentation
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;[Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileInstrumentation
      </className>
      <methodName>
        getInstruments
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; getInstruments()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileInstrumentation
      </className>
      <methodName>
        getNickname
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getNickname()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileItem
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileItem
      </className>
      <methodName>
        getValue
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getValue()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileItem
      </className>
      <methodName>
        setValue
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setValue(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileItem
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;Lde/cr/freitonal/shared/models/VolatileInstrumentation;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item, de.cr.freitonal.shared.models.VolatileInstrumentation)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;Lde/cr/freitonal/shared/models/VolatileInstrumentation;Lde/cr/freitonal/shared/models/Catalog;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item, de.cr.freitonal.shared.models.VolatileInstrumentation, de.cr.freitonal.shared.models.Catalog)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;Lde/cr/freitonal/shared/models/VolatileInstrumentation;Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item, de.cr.freitonal.shared.models.VolatileInstrumentation, de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        getCatalog
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Catalog;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Catalog getCatalog()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        getComposer
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getComposer()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        getInstrumentation
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/VolatileInstrumentation;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.VolatileInstrumentation getInstrumentation()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        getPieceType
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getPieceType()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        setCatalog
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Catalog;)V
      </methodSignature>
      <fullMethod>
        public  void setCatalog(de.cr.freitonal.shared.models.Catalog)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        setComposer
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setComposer(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        setInstrumentation
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/VolatileInstrumentation;)V
      </methodSignature>
      <fullMethod>
        public  void setInstrumentation(de.cr.freitonal.shared.models.VolatileInstrumentation)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        setPieceType
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setPieceType(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiecePlusInstrumentationType
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/shared/models/Item;Lde/cr/freitonal/shared/models/Instrumentation;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String, de.cr.freitonal.shared.models.Item, de.cr.freitonal.shared.models.Instrumentation)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiecePlusInstrumentationType
      </className>
      <methodName>
        getInstrumentation
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Instrumentation;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Instrumentation getInstrumentation()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiecePlusInstrumentationType
      </className>
      <methodName>
        getNickname
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getNickname()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiecePlusInstrumentationType
      </className>
      <methodName>
        getPieceType
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getPieceType()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event
      </package>
      <className>
        HasClickHandlersMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event
      </package>
      <className>
        HasClickHandlersMock
      </className>
      <methodName>
        addClickHandler
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ClickHandler;)Lcom/google/gwt/event/shared/HandlerRegistration;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.HandlerRegistration addClickHandler(com.google.gwt.event.dom.client.ClickHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADFAShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADFAShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAShould$1
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAShould$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADFAShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADFAShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAShould$2
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADFAWithATriggerParamShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADFAWithATriggerParamShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamShould$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamTransitionAndANormalTransitionShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADFAWithATriggerParamTransitionAndANormalTransitionShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADFAWithATriggerParamTransitionAndANormalTransitionShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamTransitionAndANormalTransitionShould$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamTransitionAndANormalTransitionShould$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADFAWithATriggerParamTransitionAndANormalTransitionShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADFAWithATriggerParamTransitionAndANormalTransitionShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamTransitionAndANormalTransitionShould$2
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADeltaMapShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADeltaMapShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADeltaMapShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADeltaMapShould$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/ADeltaMapShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.ADeltaMapShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADeltaMapShould$2
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        SimpleDFATest$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/SimpleDFATest;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.SimpleDFATest)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        SimpleDFATest$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        SimpleDFATest$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/event/dfa/SimpleDFATest;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.event.dfa.SimpleDFATest)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        SimpleDFATest$2
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.models.factories
      </package>
      <className>
        AnAbstractFactoryShould$AbstractFactoryTester
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/models/factories/AnAbstractFactoryShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.models.factories.AnAbstractFactoryShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.models.factories
      </package>
      <className>
        AnAbstractFactoryShould$AbstractFactoryTester
      </className>
      <methodName>
        createItemListFromRPCArray
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOArray;)Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; createItemListFromRPCArray(de.cr.freitonal.client.rpc.dto.DTOArray)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.models.factories
      </package>
      <className>
        FactoryTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.models.factories
      </package>
      <className>
        FactoryTest
      </className>
      <methodName>
        parse
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/dto/DTOObject;
      </methodSignature>
      <fullMethod>
        protected  de.cr.freitonal.client.rpc.dto.DTOObject parse(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.models.factories
      </package>
      <className>
        FactoryTest
      </className>
      <methodName>
        setup
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setup()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/rpc/JSONTestCase;Lde/cr/freitonal/client/rpc/dto/DTOParser;Lde/cr/freitonal/client/rpc/URLEncoder;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.rpc.JSONTestCase, de.cr.freitonal.client.rpc.dto.DTOParser, de.cr.freitonal.client.rpc.URLEncoder, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase$1
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;Lcom/google/gwt/user/client/rpc/AsyncCallback&lt;Lde/cr/freitonal/client/rpc/SearchResult;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void search(de.cr.freitonal.client.rpc.PieceSearchMask, com.google.gwt.user.client.rpc.AsyncCallback&lt;de.cr.freitonal.client.rpc.SearchResult&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase$2
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/rpc/JSONTestCase;Lde/cr/freitonal/client/rpc/dto/DTOParser;Lde/cr/freitonal/client/rpc/URLEncoder;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.rpc.JSONTestCase, de.cr.freitonal.client.rpc.dto.DTOParser, de.cr.freitonal.client.rpc.URLEncoder)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase$2
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;Lcom/google/gwt/user/client/rpc/AsyncCallback&lt;Lde/cr/freitonal/client/rpc/SearchResult;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void search(de.cr.freitonal.client.rpc.PieceSearchMask, com.google.gwt.user.client.rpc.AsyncCallback&lt;de.cr.freitonal.client.rpc.SearchResult&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase
      </className>
      <methodName>
        onNextSearchFail
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void onNextSearchFail()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase
      </className>
      <methodName>
        onNextSearchReturn
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        protected  void onNextSearchReturn(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        JSONTestCase
      </className>
      <methodName>
        setUp
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setUp()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        ModelFactoryMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        ModelFactoryMock
      </className>
      <methodName>
        createSearchResult
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/SearchResult;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.SearchResult createSearchResult(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceImplTest$1$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/rpc/RPCServiceImplTest$1;Lcom/google/gwt/http/client/RequestBuilder$Method;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.rpc.RPCServiceImplTest$1, com.google.gwt.http.client.RequestBuilder$Method, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceImplTest$1$1
      </className>
      <methodName>
        sendRequest
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lcom/google/gwt/http/client/RequestCallback;)Lcom/google/gwt/http/client/Request;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.http.client.Request sendRequest(java.lang.String, com.google.gwt.http.client.RequestCallback)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceImplTest$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/rpc/RPCServiceImplTest;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.rpc.RPCServiceImplTest, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceImplTest$1
      </className>
      <methodName>
        createRequestBuilder
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/http/client/RequestBuilder$Method;Ljava/lang/String;)Lcom/google/gwt/http/client/RequestBuilder;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.http.client.RequestBuilder createRequestBuilder(com.google.gwt.http.client.RequestBuilder$Method, java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Ljava/lang/String;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;java.lang.String&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceMock
      </className>
      <methodName>
        save
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/VolatilePiece;)V
      </methodSignature>
      <fullMethod>
        public  void save(de.cr.freitonal.shared.models.VolatilePiece)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceMock
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/user/client/rpc/AsyncCallback&lt;Lde/cr/freitonal/client/rpc/SearchResult;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void search(com.google.gwt.user.client.rpc.AsyncCallback&lt;de.cr.freitonal.client.rpc.SearchResult&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        RPCServiceMock
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;Lcom/google/gwt/user/client/rpc/AsyncCallback&lt;Lde/cr/freitonal/client/rpc/SearchResult;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void search(de.cr.freitonal.client.rpc.PieceSearchMask, com.google.gwt.user.client.rpc.AsyncCallback&lt;de.cr.freitonal.client.rpc.SearchResult&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        URLEncoderMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        URLEncoderMock
      </className>
      <methodName>
        encode
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String encode(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.rpc
      </package>
      <className>
        URLEncoderMock
      </className>
      <methodName>
        encodeParam
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String encodeParam(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createCatalogSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/CatalogSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.CatalogSet createCatalogSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createComposerSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ComposerSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.ComposerSet createComposerSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createMusicKeySet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/MusicKeySet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.MusicKeySet createMusicKeySet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createOrdinalSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/OrdinalSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.OrdinalSet createOrdinalSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createPieceMask
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/PieceSearchMask;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.rpc.PieceSearchMask createPieceMask()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createPieceTypeSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/PieceTypeSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.PieceTypeSet createPieceTypeSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createPublicationDateSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/PublicationDateSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.PublicationDateSet createPublicationDateSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createSubtitleSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/SubtitleSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.SubtitleSet createSubtitleSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        InstrumentationSetGenerator
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        InstrumentationSetGenerator
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        InstrumentationSetGenerator
      </className>
      <methodName>
        generateInstrumentationSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.InstrumentationSet generateInstrumentationSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        JSONStrings
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        JSONStrings
      </className>
      <methodName>
        getInstrumentationSetWithTwoInstrumentationsString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String getInstrumentationSetWithTwoInstrumentationsString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        JSONStrings
      </className>
      <methodName>
        getInstrumentationWithTwoInstrumentsString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String getInstrumentationWithTwoInstrumentsString()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getFullSearchJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getFullSearchJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForAMajorJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForAMajorJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForBeethovenJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForBeethovenJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForOrdinal4aJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForOrdinal4aJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForPianoAndViolinJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForPianoAndViolinJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForPianoJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForPianoJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForQuartettJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForQuartettJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TestResources
      </className>
      <methodName>
        getSearchForSubtitleJSON
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/unittests/client/test/data/TextResource;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.unittests.client.test.data.TextResource getSearchForSubtitleJSON()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TextResource
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        TextResource
      </className>
      <methodName>
        getText
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getText()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.util
      </package>
      <className>
        ArrayListEquals
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;TT;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;T&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.util
      </package>
      <className>
        SizeOfArrayList
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (I)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(int)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.util
      </package>
      <className>
        SizeOfArrayList
      </className>
      <methodName>
        appendTo
      </methodName>
      <methodSignature>
        (Ljava/lang/StringBuffer;)V
      </methodSignature>
      <fullMethod>
        public  void appendTo(java.lang.StringBuffer)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets
      </package>
      <className>
        PresenterTest$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/widgets/PresenterTest;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.widgets.PresenterTest)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets
      </package>
      <className>
        PresenterTest$1
      </className>
      <methodName>
        onSearchFieldChanged
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/SearchFieldChangedEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onSearchFieldChanged(de.cr.freitonal.client.event.SearchFieldChangedEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets
      </package>
      <className>
        PresenterTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets
      </package>
      <className>
        PresenterTest
      </className>
      <methodName>
        setup
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setup()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        ACompositePresenterWithTwoSubPresentersShould$CompositePresenterWithTwoSubPresenters
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/widgets/base/ACompositePresenterWithTwoSubPresentersShould;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.unittests.client.widgets.base.ACompositePresenterWithTwoSubPresentersShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        ASearchFieldPresenterAfterInitialLoadingShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/widgets/base/ASearchFieldPresenterAfterInitialLoadingShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.widgets.base.ASearchFieldPresenterAfterInitialLoadingShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        ASearchFieldPresenterAfterInitialLoadingShould$1
      </className>
      <methodName>
        onSearchFieldChanged
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/SearchFieldChangedEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onSearchFieldChanged(de.cr.freitonal.client.event.SearchFieldChangedEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        BaseViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        BaseViewMock
      </className>
      <methodName>
        getLabel
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/user/client/ui/HasText;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.user.client.ui.HasText getLabel()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        BaseViewMock
      </className>
      <methodName>
        getListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        getDisplayMode
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/DisplayMode;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.DisplayMode getDisplayMode()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelectedItem()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        getView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.View getView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base
      </package>
      <className>
        SelectablePresenterMock
      </className>
      <methodName>
        setItemSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        public  void setItemSet(de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        AListBoxPresenterAfterInitialLoadingShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/widgets/base/listbox/AListBoxPresenterAfterInitialLoadingShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.widgets.base.listbox.AListBoxPresenterAfterInitialLoadingShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        AListBoxPresenterAfterInitialLoadingShould$1
      </className>
      <methodName>
        onChange
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onChange(com.google.gwt.event.dom.client.ChangeEvent)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenterTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        addChangeHandler
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeHandler;)Lcom/google/gwt/event/shared/HandlerRegistration;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.HandlerRegistration addChangeHandler(com.google.gwt.event.dom.client.ChangeHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        addClickHandler
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ClickHandler;)Lcom/google/gwt/event/shared/HandlerRegistration;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.shared.HandlerRegistration addClickHandler(com.google.gwt.event.dom.client.ClickHandler)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        fireEvent
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/GwtEvent&lt;*&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void fireEvent(com.google.gwt.event.shared.GwtEvent&lt;?&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelectedItem()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        isEnabled
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isEnabled()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        isVisible
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isVisible()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        removeFromParent
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void removeFromParent()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        setItems
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void setItems(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        setSelectedItem
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setSelectedItem(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.scalar
      </package>
      <className>
        ScalarViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.scalar
      </package>
      <className>
        ScalarViewMock
      </className>
      <methodName>
        getLabel
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/user/client/ui/HasText;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.user.client.ui.HasText getLabel()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.scalar
      </package>
      <className>
        ScalarViewMock
      </className>
      <methodName>
        getListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.catalog
      </package>
      <className>
        CatalogPresenterTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.catalog
      </package>
      <className>
        CatalogPresenterTest
      </className>
      <methodName>
        generateCatalogSet
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/CatalogSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.CatalogSet generateCatalogSet()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.catalog
      </package>
      <className>
        CatalogViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.catalog
      </package>
      <className>
        CatalogViewMock
      </className>
      <methodName>
        getNameListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getNameListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.catalog
      </package>
      <className>
        CatalogViewMock
      </className>
      <methodName>
        getNumberListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getNumberListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.composer
      </package>
      <className>
        ComposerPresenterTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.composer
      </package>
      <className>
        ComposerViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.composer
      </package>
      <className>
        ComposerViewMock
      </className>
      <methodName>
        getLabel
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/user/client/ui/HasText;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.user.client.ui.HasText getLabel()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.composer
      </package>
      <className>
        ComposerViewMock
      </className>
      <methodName>
        getListBoxView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView getListBoxView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenterTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Ljava/lang/String;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;java.lang.String&gt;)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationViewMock
      </className>
      <methodName>
        addInstrumentList
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/listbox/IListBoxView;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.listbox.IListBoxView addInstrumentList()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationViewMock
      </className>
      <methodName>
        getAddInstrumentButton
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/dom/client/HasClickHandlers;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.dom.client.HasClickHandlers getAddInstrumentButton()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationViewMock
      </className>
      <methodName>
        setAddInstrumentButtonVisible
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setAddInstrumentButtonVisible(boolean)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.musickey
      </package>
      <className>
        MusicKeyViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.ordinal
      </package>
      <className>
        OrdinalViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        APiecePresenterInCreationModeShould$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/widgets/piece/APiecePresenterInCreationModeShould;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.widgets.piece.APiecePresenterInCreationModeShould)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        APiecePresenterInCreationModeShould$1
      </className>
      <methodName>
        save
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/VolatilePiece;)V
      </methodSignature>
      <fullMethod>
        public  void save(de.cr.freitonal.shared.models.VolatilePiece)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        APiecePresenterShould
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        APiecePresenterShould
      </className>
      <methodName>
        setupPiecePresenter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setupPiecePresenter()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PiecePresenterTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceTestCase
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceTestCase
      </className>
      <methodName>
        setUp
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setUp()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getAddPieceButton
      </methodName>
      <methodSignature>
        ()Lcom/google/gwt/event/dom/client/HasClickHandlers;
      </methodSignature>
      <fullMethod>
        public  com.google.gwt.event.dom.client.HasClickHandlers getAddPieceButton()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getCatalogView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/catalog/CatalogPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.catalog.CatalogPresenter$View getCatalogView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getComposerView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/composer/ComposerPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.composer.ComposerPresenter$View getComposerView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getInstrumentationView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/instrumentation/InstrumentationPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.instrumentation.InstrumentationPresenter$View getInstrumentationView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getMusicKeyView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getMusicKeyView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getOrdinalView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getOrdinalView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getPieceTypeView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getPieceTypeView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getPublicationDateView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getPublicationDateView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        getSubtitleView
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/widgets/base/scalar/ScalarPresenter$View;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.widgets.base.scalar.ScalarPresenter$View getSubtitleView()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piece
      </package>
      <className>
        PieceViewMock
      </className>
      <methodName>
        setAddPieceButtonText
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void setAddPieceButtonText(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenterTest$1
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/unittests/client/widgets/piecetype/PieceTypePresenterTest;)V
      </methodSignature>
      <fullMethod>
         void &lt;init&gt;(de.cr.freitonal.unittests.client.widgets.piecetype.PieceTypePresenterTest)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenterTest$1
      </className>
      <methodName>
        onPiecePlusInstrumentationTypeSelected
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onPiecePlusInstrumentationTypeSelected()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.piecetype
      </package>
      <className>
        PieceTypeViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.pubdate
      </package>
      <className>
        PublicationDateViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.subtitle
      </package>
      <className>
        SubtitleViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.server
      </package>
      <className>
        ClojureTest
      </className>
      <methodName>
        &lt;clinit&gt;
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        static  void &lt;clinit&gt;()
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.server
      </package>
      <className>
        ClojureTest
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.lang.String)
      </fullMethod>
      <crap>
        2.00
      </crap>
      <complexity>
        1
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/AbstractTransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(java.lang.String[], java.lang.String, java.lang.String, de.cr.freitonal.client.event.dfa.AbstractTransitionAction)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransitionWithTriggerParam
      </methodName>
      <methodSignature>
        ([Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void addTransitionWithTriggerParam(java.lang.String[], java.lang.String, de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        addTransitionWithTriggerParam
      </methodName>
      <methodSignature>
        ([Ljava/lang/String;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/TriggerParam;Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/AbstractTransitionAction;)V
      </methodSignature>
      <fullMethod>
        public  void addTransitionWithTriggerParam(java.lang.String[], java.lang.String, de.cr.freitonal.client.event.dfa.TriggerParam, java.lang.String, de.cr.freitonal.client.event.dfa.AbstractTransitionAction)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        moveToNextState
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/dfa/Trigger;)Lde/cr/freitonal/client/event/dfa/TransitionAction;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.event.dfa.TransitionAction moveToNextState(de.cr.freitonal.client.event.dfa.Trigger)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        start
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        public  void start(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        getAction
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/Trigger;)Lde/cr/freitonal/client/event/dfa/TransitionAction;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.dfa.TransitionAction getAction(java.lang.String, de.cr.freitonal.client.event.dfa.Trigger)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        getState
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/Trigger;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String getState(java.lang.String, de.cr.freitonal.client.event.dfa.Trigger)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        prepareAddingAState
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void prepareAddingAState(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        prepareAddingATrigger
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void prepareAddingATrigger(java.lang.String, java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        EqualsTriggerParam
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Trigger
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSet
      </className>
      <methodName>
        setSelected
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setSelected(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        ItemSetMultiSelection
      </className>
      <methodName>
        setSelectedList
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setSelectedList(de.cr.freitonal.shared.models.Item[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        MultiSourceItemSet
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        ([Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(de.cr.freitonal.client.models.ItemSet[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        MultiSourceItemSet
      </className>
      <methodName>
        getItems
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; getItems()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        ComposerSetFactory
      </className>
      <methodName>
        createComposerSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/ComposerSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ComposerSet createComposerSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        InstrumentationSetFactory
      </className>
      <methodName>
        createInstrumentationSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOObject;)Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.InstrumentationSet createInstrumentationSet(de.cr.freitonal.client.rpc.dto.DTOObject)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        addHTTPParameter
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void addHTTPParameter(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        addHTTPParameters
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Ljava/lang/String;&gt;;)V
      </methodSignature>
      <fullMethod>
        private  void addHTTPParameters(java.util.ArrayList&lt;java.lang.String&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        itemSetToHTTPParameter
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;Ljava/lang/String;)V
      </methodSignature>
      <fullMethod>
        private  void itemSetToHTTPParameter(de.cr.freitonal.client.models.ItemSet, java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        createSearchResult
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;Ljava/lang/String;)Lde/cr/freitonal/client/rpc/SearchResult;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.SearchResult createSearchResult(de.cr.freitonal.client.rpc.PieceSearchMask, java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        RPCServiceImpl
      </className>
      <methodName>
        search
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/PieceSearchMask;Lcom/google/gwt/user/client/rpc/AsyncCallback&lt;Lde/cr/freitonal/client/rpc/SearchResult;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void search(de.cr.freitonal.client.rpc.PieceSearchMask, com.google.gwt.user.client.rpc.AsyncCallback&lt;de.cr.freitonal.client.rpc.SearchResult&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOValueGWT
      </className>
      <methodName>
        isArray
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTOArray;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOArray isArray()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOValueGWT
      </className>
      <methodName>
        isNumber
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTONumber;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTONumber isNumber()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOValueGWT
      </className>
      <methodName>
        isObject
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTOObject;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOObject isObject()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.gwt
      </package>
      <className>
        DTOValueGWT
      </className>
      <methodName>
        isString
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTOString;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOString isString()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOObjectJava
      </className>
      <methodName>
        get
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Lde/cr/freitonal/client/rpc/dto/DTOValue;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOValue get(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOValueJava
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Lcom/google/gson/JsonElement;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(com.google.gson.JsonElement)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOValueJava
      </className>
      <methodName>
        isArray
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTOArray;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOArray isArray()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOValueJava
      </className>
      <methodName>
        isObject
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTOObject;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOObject isObject()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        isNotEmpty
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public static  boolean isNotEmpty(java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        join
      </methodName>
      <methodSignature>
        (Ljava/util/Collection;C)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String join(java.util.Collection, char)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        join
      </methodName>
      <methodSignature>
        (Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String join(java.util.Collection, java.lang.String)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        removeAllButTheFirstPresenter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void removeAllButTheFirstPresenter()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        SearchFieldPresenter
      </className>
      <methodName>
        fireListBoxChangedEvent
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void fireListBoxChangedEvent()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter$4
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        fireListBoxChangedEvent
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void fireListBoxChangedEvent()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getItemCount
      </methodName>
      <methodSignature>
        ()I
      </methodSignature>
      <fullMethod>
        public  int getItemCount()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        updateDisplayModeOfView
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void updateDisplayModeOfView()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        $SWITCH_TABLE$de$cr$freitonal$client$event$DisplayMode
      </methodName>
      <methodSignature>
        ()[I
      </methodSignature>
      <fullMethod>
        static  int[] $SWITCH_TABLE$de$cr$freitonal$client$event$DisplayMode()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        addItems
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;)V
      </methodSignature>
      <fullMethod>
        private  void addItems(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        getFirstNonSpecialItem
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        private  java.lang.String getFirstNonSpecialItem()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        switchToDependedViewMode
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        protected  void switchToDependedViewMode()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.catalog
      </package>
      <className>
        CatalogPresenter
      </className>
      <methodName>
        setCatalogs
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/CatalogSet;)V
      </methodSignature>
      <fullMethod>
        public  void setCatalogs(de.cr.freitonal.client.models.CatalogSet)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$2
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter$8
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        extractInstrumentsFromInstrumentationSet
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/InstrumentationSet;)Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.models.ItemSet extractInstrumentsFromInstrumentationSet(de.cr.freitonal.client.models.InstrumentationSet)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.instrumentation
      </package>
      <className>
        InstrumentationPresenter
      </className>
      <methodName>
        setEnabled
      </methodName>
      <methodSignature>
        (Z)V
      </methodSignature>
      <fullMethod>
        public  void setEnabled(boolean)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piece
      </package>
      <className>
        PiecePresenter$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void onTransition()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.piecetype
      </package>
      <className>
        PieceTypePresenter$1
      </className>
      <methodName>
        onChange
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/dom/client/ChangeEvent;)V
      </methodSignature>
      <fullMethod>
        public  void onChange(com.google.gwt.event.dom.client.ChangeEvent)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        createValueList
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;II)Ljava/util/ArrayList&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        private  java.util.ArrayList&lt;java.lang.String&gt; createValueList(java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt;, int, int)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        toString
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public  java.lang.String toString()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Item
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Piece
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileItem
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatilePiece
      </className>
      <methodName>
        getInstrumentationAsNonVolatile
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Instrumentation;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Instrumentation getInstrumentationAsNonVolatile()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event
      </package>
      <className>
        HasClickHandlersMock
      </className>
      <methodName>
        fireEvent
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/GwtEvent&lt;*&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void fireEvent(com.google.gwt.event.shared.GwtEvent&lt;?&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.event.dfa
      </package>
      <className>
        ADFAWithATriggerParamShould$1
      </className>
      <methodName>
        onTransition
      </methodName>
      <methodSignature>
        ([Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void onTransition(java.lang.Object[])
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createCatalogSet
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/models/CatalogSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.CatalogSet createCatalogSet(int)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        InstrumentationSetGenerator
      </className>
      <methodName>
        generateInstrumentationSet
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.InstrumentationSet generateInstrumentationSet(int)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.util
      </package>
      <className>
        ArrayListEquals
      </className>
      <methodName>
        appendTo
      </methodName>
      <methodSignature>
        (Ljava/lang/StringBuffer;)V
      </methodSignature>
      <fullMethod>
        public  void appendTo(java.lang.StringBuffer)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.widgets.base.listbox
      </package>
      <className>
        ListBoxViewMock
      </className>
      <methodName>
        &lt;init&gt;
      </methodName>
      <methodSignature>
        (Ljava/util/ArrayList&lt;Ljava/lang/String;&gt;;)V
      </methodSignature>
      <fullMethod>
        public  void &lt;init&gt;(java.util.ArrayList&lt;java.lang.String&gt;)
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.server
      </package>
      <className>
        ClojureTest
      </className>
      <methodName>
        setUp
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void setUp()
      </fullMethod>
      <crap>
        6.00
      </crap>
      <complexity>
        2
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        addTransition
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/GwtEvent$Type&lt;Lde/cr/freitonal/client/event/SearchFieldChangedHandler;&gt;;Lde/cr/freitonal/client/event/State;Lde/cr/freitonal/client/event/State;Lde/cr/freitonal/client/event/TransitionHandler;)V
      </methodSignature>
      <fullMethod>
        public  void addTransition(com.google.gwt.event.shared.GwtEvent$Type&lt;de.cr.freitonal.client.event.SearchFieldChangedHandler&gt;, de.cr.freitonal.client.event.State, de.cr.freitonal.client.event.State, de.cr.freitonal.client.event.TransitionHandler)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DFA
      </className>
      <methodName>
        transition
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/dfa/Trigger;[Ljava/lang/Object;)V
      </methodSignature>
      <fullMethod>
        public  void transition(de.cr.freitonal.client.event.dfa.Trigger, java.lang.Object[])
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        getTransitions
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/Trigger;)Ljava/util/ArrayList&lt;Lde/cr/freitonal/client/event/dfa/Transition;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.client.event.dfa.Transition&gt; getTransitions(java.lang.String, de.cr.freitonal.client.event.dfa.Trigger)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        MultiSourceItemSet
      </className>
      <methodName>
        checkAndTransferSelection
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/ItemSet;)V
      </methodSignature>
      <fullMethod>
        private  void checkAndTransferSelection(de.cr.freitonal.client.models.ItemSet)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models
      </package>
      <className>
        MultiSourceItemSet
      </className>
      <methodName>
        getSelectedSource
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/models/ItemSet;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.models.ItemSet getSelectedSource()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        AbstractFactory
      </className>
      <methodName>
        createItemListFromRPCArray
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOArray;)Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        protected  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; createItemListFromRPCArray(de.cr.freitonal.client.rpc.dto.DTOArray)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.models.factories
      </package>
      <className>
        AbstractFactory
      </className>
      <methodName>
        forceString
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/rpc/dto/DTOValue;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        protected  java.lang.String forceString(de.cr.freitonal.client.rpc.dto.DTOValue)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc
      </package>
      <className>
        JSONFactory
      </className>
      <methodName>
        instrumentationsToHTTPParameter
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void instrumentationsToHTTPParameter()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.factories
      </package>
      <className>
        CatalogHTTPParameterFactory
      </className>
      <methodName>
        createHTTPParameters
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/models/CatalogSet;)Ljava/util/ArrayList&lt;Ljava/lang/String;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;java.lang.String&gt; createHTTPParameters(de.cr.freitonal.client.models.CatalogSet)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOValueJava
      </className>
      <methodName>
        isNumber
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTONumber;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTONumber isNumber()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.rpc.java
      </package>
      <className>
        DTOValueJava
      </className>
      <methodName>
        isString
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/rpc/dto/DTOString;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.rpc.dto.DTOString isString()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        isEmpty
      </methodName>
      <methodSignature>
        (Ljava/lang/String;)Z
      </methodSignature>
      <fullMethod>
        public static  boolean isEmpty(java.lang.String)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        getDisplayMode
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/DisplayMode;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.DisplayMode getDisplayMode()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base
      </package>
      <className>
        CompositePresenter
      </className>
      <methodName>
        getSelectedItems
      </methodName>
      <methodSignature>
        ()Ljava/util/ArrayList&lt;Lde/cr/freitonal/shared/models/Item;&gt;;
      </methodSignature>
      <fullMethod>
        public  java.util.ArrayList&lt;de.cr.freitonal.shared.models.Item&gt; getSelectedItems()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        isInAViewMode
      </methodName>
      <methodSignature>
        ()Z
      </methodSignature>
      <fullMethod>
        public  boolean isInAViewMode()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        updateItemSetSelection
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        private  void updateItemSetSelection()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        getSelectedItem
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/shared/models/Item;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.shared.models.Item getSelectedItem()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        setSelectedItem
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/shared/models/Item;)V
      </methodSignature>
      <fullMethod>
        public  void setSelectedItem(de.cr.freitonal.shared.models.Item)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        Instrumentation
      </className>
      <methodName>
        renderInstruments
      </methodName>
      <methodSignature>
        ()Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        private  java.lang.String renderInstruments()
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.test.data
      </package>
      <className>
        FullSearchInformation
      </className>
      <methodName>
        createInstrumentationSet
      </methodName>
      <methodSignature>
        (I)Lde/cr/freitonal/client/models/InstrumentationSet;
      </methodSignature>
      <fullMethod>
        public static  de.cr.freitonal.client.models.InstrumentationSet createInstrumentationSet(int)
      </fullMethod>
      <crap>
        12.00
      </crap>
      <complexity>
        3
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event
      </package>
      <className>
        OldDFA
      </className>
      <methodName>
        transition
      </methodName>
      <methodSignature>
        (Lcom/google/gwt/event/shared/GwtEvent$Type&lt;*&gt;;Lde/cr/freitonal/client/event/TransitionHandler;Lcom/google/gwt/event/shared/GwtEvent&lt;*&gt;;)V
      </methodSignature>
      <fullMethod>
        private  void transition(com.google.gwt.event.shared.GwtEvent$Type&lt;?&gt;, de.cr.freitonal.client.event.TransitionHandler, com.google.gwt.event.shared.GwtEvent&lt;?&gt;)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.shared.models
      </package>
      <className>
        VolatileInstrumentation
      </className>
      <methodName>
        equals
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean equals(java.lang.Object)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.util
      </package>
      <className>
        SizeOfArrayList
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object)
      </fullMethod>
      <crap>
        20.00
      </crap>
      <complexity>
        4
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        0
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        DeltaMap
      </className>
      <methodName>
        getTransition
      </methodName>
      <methodSignature>
        (Ljava/lang/String;Lde/cr/freitonal/client/event/dfa/Trigger;)Lde/cr/freitonal/client/event/dfa/Transition;
      </methodSignature>
      <fullMethod>
        private  de.cr.freitonal.client.event.dfa.Transition getTransition(java.lang.String, de.cr.freitonal.client.event.dfa.Trigger)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.event.dfa
      </package>
      <className>
        Transition
      </className>
      <methodName>
        compareTo
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/dfa/Transition;)I
      </methodSignature>
      <fullMethod>
        public  int compareTo(de.cr.freitonal.client.event.dfa.Transition)
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxPresenter
      </className>
      <methodName>
        getDisplayMode
      </methodName>
      <methodSignature>
        ()Lde/cr/freitonal/client/event/DisplayMode;
      </methodSignature>
      <fullMethod>
        public  de.cr.freitonal.client.event.DisplayMode getDisplayMode()
      </fullMethod>
      <crap>
        30.00
      </crap>
      <complexity>
        5
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        5
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.server
      </package>
      <className>
        ClojureTest
      </className>
      <methodName>
        testAll
      </methodName>
      <methodSignature>
        ()V
      </methodSignature>
      <fullMethod>
        public  void testAll()
      </fullMethod>
      <crap>
        42.00
      </crap>
      <complexity>
        6
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        6
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        join
      </methodName>
      <methodSignature>
        (Ljava/util/Iterator;C)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String join(java.util.Iterator, char)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.widgets.base.listbox
      </package>
      <className>
        ListBoxView
      </className>
      <methodName>
        setDisplayMode
      </methodName>
      <methodSignature>
        (Lde/cr/freitonal/client/event/DisplayMode;)V
      </methodSignature>
      <fullMethod>
        public  void setDisplayMode(de.cr.freitonal.client.event.DisplayMode)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.unittests.client.util
      </package>
      <className>
        ArrayListEquals
      </className>
      <methodName>
        matches
      </methodName>
      <methodSignature>
        (Ljava/lang/Object;)Z
      </methodSignature>
      <fullMethod>
        public  boolean matches(java.lang.Object)
      </fullMethod>
      <crap>
        56.00
      </crap>
      <complexity>
        7
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        7
      </crapLoad>
    </method>
    <method>
      <package>
        de.cr.freitonal.client.utils
      </package>
      <className>
        StringUtils
      </className>
      <methodName>
        join
      </methodName>
      <methodSignature>
        (Ljava/util/Iterator;Ljava/lang/String;)Ljava/lang/String;
      </methodSignature>
      <fullMethod>
        public static  java.lang.String join(java.util.Iterator, java.lang.String)
      </fullMethod>
      <crap>
        72.00
      </crap>
      <complexity>
        8
      </complexity>
      <coverage>
        0.00
      </coverage>
      <crapLoad>
        8
      </crapLoad>
    </method>
  </methods>
</crap_result>
